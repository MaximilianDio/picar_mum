<launch>
    <arg name="ns"/>
    <arg name="machine" default="$(arg ns)"/>
    <arg name="sim" default="false"/>
    <arg name="paused" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="compute_on_pi" default="true"/>


    <machine
            name="$(arg machine)"
            address="$(arg machine).local"
            user="pi"
            env-loader="/home/pi/picar_mum/catkin_ws/env.sh"
    />

    <!-- if running on real vehicle -->
    <group unless="$(arg sim)">

        <!-- start motor node -->
        <include file="$(find motor)/launch/motor_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
        </include>

        <!-- start camera node -->
        <include file="$(find camera)/launch/camera_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
        </include>

        <!-- start encoder node -->
        <include file="$(find encoder)/launch/encoder_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
        </include>

        <!-- start node controlling the imu -->
        <include file="$(find imu)/launch/imu_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
        </include>

         <!-- start race_controller_node -->
        <remap from="race_control_node/curve_point" to="curved_line_detection_node/curve_point"/>
        <remap from="race_control_node/velocity_estimated" to="velocity_estimation_node/velocity_estimated"/>
        <include file="$(find race_control)/launch/race_control_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
            <arg name="local" value="$(eval not arg('compute_on_pi'))"/>
        </include>

        <!-- start velocity_estimation node -->
        <remap from="velocity_estimation_node/imu" to="imu_node/imu"/>
        <remap from="velocity_estimation_node/input_encoder_data" to="encoder_node/wheel_speed"/>
        <include file="$(find velocity_estimation)/launch/velocity_estimation_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
            <arg name="local" value="$(eval not arg('compute_on_pi'))"/>
        </include>

          <!-- curve detection -->
        <remap from="curved_line_detection_node/input_image/raw" to="color_normalization_node/output_image/raw"/>
        <include file="$(find curved_line_detection)/launch/curved_line_detection_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
            <arg name="local" value="$(eval not arg('compute_on_pi'))"/>
            <arg name="distorted_input" value="true"/>
        </include>

    </group>


    <!-- if running on simulated vehicle -->
    <group if="$(arg sim)">

        <!-- start race_loop-->
        <include file="$(find simulation)/launch/race_loop.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="paused" value="$(arg paused)"/>
            <arg name="gui" value="$(arg gui)"/>
        </include>

        <!-- start velocity_estimation node -->
        <remap from="velocity_estimation_node/imu" to="imu"/>
        <remap from="velocity_estimation_node/input_encoder_data" to="wheel_speed"/>
        <include file="$(find velocity_estimation)/launch/velocity_estimation_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
            <arg name="local" value="$(eval not arg('compute_on_pi'))"/>
        </include>


        <!-- start race_controller_node -->
        <remap from="race_control_node/curve_point" to="curved_line_detection_node/curve_point"/>
        <remap from="race_control_node/velocity_estimated" to="velocity_estimation_node/velocity_estimated"/>
        <include file="$(find race_control)/launch/race_control_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
            <arg name="local" value="$(eval not arg('compute_on_pi'))"/>
        </include>

                <!-- curve detection -->
        <remap from="curved_line_detection_node/input_image/raw" to="color_normalization_node/output_image/raw"/>
        <include file="$(find curved_line_detection)/launch/curved_line_detection_node.launch">
            <arg name="ns" value="$(arg ns)"/>
            <arg name="machine" value="$(arg machine)"/>
            <arg name="local" value="$(eval not arg('compute_on_pi'))"/>
            <arg name="distorted_input" value="false"/>
        </include>

  </group>

    <!-- start always -->
    <!--start color_normalization_node -->
    <remap from="color_normalization_node/input_image/compressed" to="camera_node/image/compressed"/>
    <include file="$(find color_normalization)/launch/color_normalization_node.launch">
        <arg name="ns" value="$(arg ns)"/>
        <arg name="machine" value="$(arg machine)"/>
        <arg name="local" value="$(eval not arg('compute_on_pi'))"/>
    </include>

</launch>